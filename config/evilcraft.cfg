# Configuration file

biome {
    B:biomeDegraded=false
}


block {
    B:bloodChest=true
    B:bloodInfuser=true
    B:bloodStainedBlock=false

    # The blacklisted blood stained blocks, by blockState name.
    S:bloodStainedBlock.blockBlacklist <
        minecraft:redstone_lamp
        minecraft:crafting_table
     >

    # The amount of blood per HP (2HP = 1 heart) of the max mob health that will be added to this blockState when a mob dies from fall damage.
    I:bloodStainedBlock.bloodMBPerHP=5
    B:bloodWaxedCoalBlock=true
    B:bloodyCobblestone=true
    B:boxOfEternalClosure=false
    B:colossalBloodChest=true
    B:darkBlock=true
    B:darkBloodBrick=true
    B:darkBloodBrickStairs=false
    B:darkBrick=true
    B:darkBrickStairs=false
    B:darkOre=true
    B:darkPowerGemBlock=true
    B:darkTank=false
    B:displayStand=true
    B:entangledChalice=true
    B:environmentalAccumulator=true
    B:eternalWaterBlock=true
    B:excrementPile=false

    # The relative effectiveness when compared to bonemeal if shift right click using.
    I:excrementPile.effectiveness=3

    # If Excrement can also poison any mob next to players.
    B:excrementPile.poisonEntities=false
    B:gemStoneTorch=true

    # The radius that will be kept spirit-proof.
    I:gemStoneTorch.area=15
    B:invisibleRedstoneBlock=true
    B:lightningBomb=false
    B:netherMonsterBlock=false
    B:obscuredGlass=true
    B:purifier=false
    B:reinforcedUndeadPlank=true
    B:reinforcedUndeadPlankStairs=false
    B:sanguinaryEnvironmentalAccumulator=true
    B:sanguinaryPedestal=false
    B:spikedPlate=false

    # The amount of damage per time.
    D:spikedPlate.damage=1.0

    # The multiplier for amount of mB to receive per mob HP.
    D:spikedPlate.mobMultiplier=0.0
    B:spiritFurnace=false
    B:spiritPortal=false
    B:spiritReanimator=false
    B:undeadPlank=true
    B:undeadPlankStairs=false
}


core {
    # If an anonymous mod startup analytics request may be sent to our analytics service.
    B:general.analytics=true

    # If the recipe loader should crash when finding invalid recipes.
    B:general.crashOnInvalidRecipe=true

    # If mod compatibility loader should crash hard if errors occur in that process.
    B:general.crashOnModCompatCrash=false

    # Set 'true' to enable development debug mode. This will result in a lower performance!
    B:general.debug=false

    # The minimum array size of potion types, increase to allow for more potion types.
    I:general.minimumPotionTypesArraySize=256

    # Config version for EvilCraft.
    # DO NOT EDIT MANUALLY!
    S:general.version=0.10.28

    # If the version checker should be enabled.
    B:general.versionChecker=true
}


"degradation effect" {
    B:biome=true
    B:knockbackDistort=true
    B:mobSpawn=true
    B:nauseate=true
    B:paling=true
    B:particle=true
    B:sound=true
    B:terraform=false
}


enchantment {
    B:breaking=false
    B:lifeStealing=false

    # The final modifier that should be applied to the healing amount.
    D:lifeStealing.healModifier=0.1
    B:poisonTip=true
    B:unusing=true
    B:vengeance=true
}


entity {
    # If crossed beams should cause explosions.
    B:entityAttackVengeanceBeam.crossBeamsExplosions=true

    # The amount of ticks (on average), this bomb should tick before explosion.
    I:entityLightningBomb.fuse=100
}


fluid {
    # The allowed blood conversions with their ratio. (ratio 2 means that this fluid is 1mB of this fluid can be converted into 2mB of EvilCraft Blood.
    S:general.bloodConverters <
        blood:0.5
        lifeessence:0.5
        hell_blood:0.5
     >
}


general {
    # If the blood gui overlay should be rendered.
    B:general.bloodGuiOverlay=true

    # The position to render the blood gui overlay at. (0=NE, 1=SE, 2=SW,3=NW)
    I:general.bloodGuiOverlayPosition=1

    # The X offset for the blood gui overlay.
    I:general.bloodGuiOverlayPositionOffsetX=-5

    # The Y offset for the blood gui overlay.
    I:general.bloodGuiOverlayPositionOffsetY=-5

    # Evil stuff...
    B:general.dieWithoutAnyReason=false

    # Server-side: If farting is enabled on this server; Client-side: If farting can be seen at your client.
    B:general.farting=true

    # The amount of mB that can flow per tick out of machines and items.
    I:general.mbFlowRate=100

    # If retro-generation of ores should be enabled. WARNING: This could cause lag if permanently enabled.
    B:general.retrogen=false

    # [Thaumcraft] If temporary warp should be added when hit by a Vengeance Spirit.
    B:general.thaumcraftVengeanceSpiritWarp=true

    # If crafting of the ender pearl should be enabled.
    B:potentiaSphere.enderPearlRecipe=true

    # If shapeless crafting of the higher tiers of weather containers should be enabled.
    B:weatherContainer.shapelessRecipes=true
}


item {
    B:biomeExtract=false

    # A list of biome names for which no Biome Extracts may be created.
    S:biomeExtract.craftingBlacklist <
        minecraft:sky
     >

    # If creative versions for all variants should be added to the creative tab.
    B:biomeExtract.creativeTabVariants=true

    # The cooldown time int the Environmental Accumulator recipe.
    I:biomeExtract.envirAccCooldownTime=500

    # If this should have recipes inside the Environmental Accumulator.
    B:biomeExtract.hasRecipes=true

    # A list of biome names for which no Biome Extracts may be used.
    S:biomeExtract.usageBlacklist <
        minecraft:sky
     >
    B:bloodExtractor=false

    # The amount of blood (mB) this container can hold.
    I:bloodExtractor.containerSize=5000

    # The maximum multiplier for amount of mB to receive per mob HP. IMPORTANT: must be larger than minimumMobMultiplier!
    D:bloodExtractor.maximumMobMultiplier=10.0

    # The minimum multiplier for amount of mB to receive per mob HP.
    D:bloodExtractor.minimumMobMultiplier=5.0
    B:bloodInfusionCore=true
    B:bloodOrb=true

    # The amount of second slowness should be applied after each teleport.
    I:bloodPearl.slownessDuration=10
    B:bloodPearlOfTeleportation=true
    B:bloodPotash=false
    B:bloodWaxedCoal=true
    B:blook=false
    B:boundBloodDrop=true

    # The maximum capacity in (Blood) mB that can be filled.
    I:boundBloodDrop.maxCapacity=250000
    B:bowlOfPromises=true
    B:broom=true

    # The blood usage in mB per tick.
    I:broom.bloodUsage=1

    # The blood usage in mB per block break.
    I:broom.bloodUsageBlockBreak=1000

    # Show broom modifier tooltips on source items.
    B:broom.broomModifierTooltips=true

    # Show broom part tooltips on source items.
    B:broom.broomPartTooltips=true

    # The position to render the broom gui overlay at. (0=NE, 1=SE, 2=SW,3=NW)
    I:broom.guiOverlayPosition=1

    # The X offset for the broom gui overlay.
    I:broom.guiOverlayPositionOffsetX=-15

    # The Y offset for the broom gui overlay.
    I:broom.guiOverlayPositionOffsetY=-10

    # If the broom should spawn in loot chests.
    B:broom.lootChests=false
    B:broomPart=true
    B:burningGemStone=true

    # How much damage this item can take.
    I:burningGemStone.maxDamage=64
    B:condensedBlood=true
    B:corruptedTear=true
    B:creativeBloodDrop=true
    B:darkGem=true
    B:darkGemCrushed=true
    B:darkPowerGem=true
    B:darkSpike=true
    B:darkStick=true
    B:darkenedApple=false
    B:dullDust=false
    B:effortlessRing=true
    B:enderTear=true

    # The 1/X chance on dropping this item.
    I:enderTear.chanceDrop=10

    # The amount of liquid ender produced when TE or TCon is available.
    I:enderTear.mbLiquidEnder=0
    B:environmentalAccumulationCore=true
    B:exaltedCrafter=false

    # If shift clicking on an item should first try to go into the crafting grid.
    B:exaltedCrafter.shiftCraftingGrid=false
    B:garmonbozia=true
    B:goldenString=true
    B:hardenedBloodShard=true

    # The additional random amount of shards from when using flint 'n steel on Hardened Blood.
    I:hardenedBloodShard.additionalDropped=4

    # The minimum amount of shards from when using flint 'n steel on Hardened Blood.
    I:hardenedBloodShard.minimumDropped=5
    B:invertedPotentia=true

    # The capacity of the pendant.
    I:invigPendant.capacity=5000

    # The amount of Blood to drain after one reduction/clearing of fire. -1 to disable fire extinguishing.
    I:invigPendant.fireUsage=500

    # The amount of seconds that will be reduced from the first found bad effect.
    I:invigPendant.reduceDuration=30

    # The amount of blood to drain after each clearing of one bad effect.
    I:invigPendant.usage=100
    B:invigoratingPendant=true
    B:kineticator=true

    # The amount of ticks in between each blood consumption when there are valid items in the area.
    I:kineticator.consumeHoldoff=20

    # If the Kineticator should also attract XP orbs.
    B:kineticator.moveXP=true

    # The amount of ticks inbetween each area checking for items.
    I:kineticator.tickHoldoff=1
    B:lightningGrenade=false
    B:maceOfDestruction=true
    B:maceOfDistortion=true
    B:necromancerStaff=false

    # The capacity of the container.
    I:necromancerStaff.capacity=10000

    # The amount of Blood that will be drained per usage.
    I:necromancerStaff.usage=2000
    B:originsOfDarkness=true
    B:piercingVengeanceFocus=false
    B:poisonBottle=false
    B:poisonSac=false
    B:potentiaSphere=true
    B:primedPendant=true

    # The capacity of the pendant.
    I:primedPendant.capacity=50000

    # Usage multipliers. Potion ids are first, followed by floating numbers. A number smaller than one blacklists that potion.
    S:primedPendant.potionMultipliers <
        21:-1
        10:10
     >

    # The amount of Blood to drain after one effect application.
    I:primedPendant.usage=100
    B:promise=true
    B:promiseAcceptor=true
    B:redstoneGrenade=false

    # If the redstone grenade should drop again as an item after it is being thrown.
    B:redstoneGrenade.dropAfterUsage=false
    B:rejuvenatedFlesh=true

    # The amount of blood (mB) that is consumed per bite.
    I:rejuvenatedFlesh.biteUsage=250

    # The amount of blood (mB) this container can hold.
    I:rejuvenatedFlesh.containerSize=10000

    # Blood multiplier when Efficiency is active.
    D:sanguinaryPedestal.efficiencyBoost=1.5
    B:sceptreOfThunder=true
    B:spectralGlasses=false
    B:spikeyClaws=false
    B:veinSword=false

    # Maximum uses for this item.
    I:veinSword.durability=32

    # The multiply boost this sword has on the blood that is obtained.
    D:veinSword.extractionBoost=2.0

    # The area of effect in blocks in which this tool could enable vengeance spirits.
    I:vengeance.areaOfEffect=5

    # The ^-1 chance for which vengeance spirits could be toggled.
    I:vengeance.vengeanceChance=3
    B:vengeanceEssence=true
    B:vengeanceFocus=false
    B:vengeancePickaxe=false
    B:vengeanceRing=false

    # The area of effect in # blocks of this ring.
    I:vengeanceRing.areaOfEffect=10
    B:weatherContainer=true
    B:werewolfBone=false
    B:werewolfFlesh=false

    # Humanoid flesh will drop in a 1/X chance.
    I:werewolfFlesh.humanoidFleshDropChance=5
    B:werewolfFur=false
}


machine {
    # If the Blood Chest should add random bad enchants with a small chance to repairing items.
    B:bloodChest.addRandomBadEnchants=false

    # The amount Blood mB required for repairing one damage value.
    I:bloodChest.mBPerDamage=100

    # If the Blood Chest should be able to repair tools from Tinkers' Construct
    B:bloodChest.repairTConstructTools=true

    # The amount of ticks required for repairing one damage value.
    I:bloodChest.ticksPerDamage=2

    # The blacklisted Blood Chest items, by item name.
    S:bloodInfuser.itemBlacklist <
        minecraft:stick
     >

    # The base amount of concurrent items that need to be available before efficiency can rise.
    I:colossalBloodChest.baseConcurrentItems=4

    # The amount Blood mB required for repairing one damage value.
    I:colossalBloodChest.baseMBPerDamage=100

    # The amount of ticks required for repairing one damage value.
    I:colossalBloodChest.ticksPerDamage=2

    # If creative versions for all fluids should be added to the creative tab.
    B:darkTank.creativeTabFluids=false

    # The maximum tank size visible in the creative tabs. (Make sure that you do not cross the max int size.)
    I:darkTank.maxTankCreativeSize=4096000

    # The maximum tank size possible by combining tanks. (Make sure that you do not cross the max int size.)
    I:darkTank.maxTankSize=65536000

    # If the fluid should be rendered statically. Fluids won't be shown fluently, but more efficiently.tab.
    B:darkTank.staticBlockRendering=false

    # If the fluid should be rendered statically. Fluids won't be shown fluently, but more efficiently.tab.
    B:entangledChalice.staticBlockRendering=false

    # Sets the default default speed in increments per tick with which an item will move when being process by an environmental accumulator.
    D:envirAcc.defaultProcessItemSpeed=0.015

    # Sets the default amount of ticks the environmental accumulator takes to process an item.
    I:envirAcc.defaultProcessItemTickCount=100

    # Sets the default amount of ticks the environmental accumulator takes to cool down
    I:envirAcc.defaultTickCooldown=1200

    # The base blood usage in mB for recipes, this is multiplied with the cooldown time per recipe.
    I:sangEnvirAcc.baseUsage=50

    # How much mB per tick this furnace should consume for boss mob spirit.
    I:spiritFurnace.bossMBPerTick=250000

    # How much mB per tick this furnace should consume.
    I:spiritFurnace.mBPerTick=25

    # If the machine should play mob death sounds.
    B:spiritFurnace.mobDeathSounds=true

    # Custom mob drops. Maps entity names to a loot table resource location. Expects the format entityname|loottable. For example: 'Pig|minecraft:entities/sheep'
    S:spiritFurnace.mobDrops <
     >

    # Custom player drops. Maps player UUID to an itemstack. Expects the format domain:itemname:amount:meta for items where amount and meta are optional.
    S:spiritFurnace.playerDrops <
        93b459be-ce4f-4700-b457-c1aa91b3b687|minecraft:stone_slab
     >

    # How much mB per tick this furnace should consume for player spirit.
    I:spiritFurnace.playerMBPerTick=100

    # The required amount of ticks for each HP for cooking an entity.
    I:spiritFurnace.requiredTicksPerHp=10

    # The 1/X chance for villagers to drop emeralds. 0 means no drops.
    I:spiritFurnace.villagerDropEmeraldChance=20

    # If the Box of Eternal Closure should be cleared after a revival.
    B:spiritReanimator.clearBoxContents=true

    # How much mB per tick this machine should consume.
    I:spiritReanimator.mBPerTick=5

    # The required amount of ticks for each reanimation.
    I:spiritReanimator.requiredTicks=500
}


mob {
    # The blacklisted items which should not be influenced by the Kineticator, by unique item/blockState name.
    S:kineticator.kineticateBlacklist <
        appliedenergistics2:item.ItemCrystalSeed
     >

    # Should the Netherfish be enabled?
    B:netherfish.isEnabled=false

    # Should the Poisonous Libelle do damage, next to poisoning?
    B:poisonousLibelle.hasAttackDamage=false

    # Should the Poisonous Libelle be enabled?
    B:poisonousLibelle.isEnabled=true

    # The minimum Y-level this mob can spawn at.
    I:poisonousLibelle.minY=55

    # 1/X chance on getting poisoned when hit.
    I:poisonousLibelle.poisonChance=20

    # The blacklisted entity spirits, by entity name.
    S:vengeanceSpirit.entityBlacklist <
        evilcraft.werewolf
        intangible.soul
     >

    # Should the Vengeance Spirit be enabled?
    B:vengeanceSpirit.isEnabled=true

    # The 1/X chance that an actual spirit will spawn when doing actions like mining with the Vengeance Pickaxe.
    I:vengeanceSpirit.nonDegradedSpawnChance=5

    # The maximum amount of vengeance spirits naturally spawnable in the spawnLimitArea.
    I:vengeanceSpirit.spawnLimit=5

    # The area in which the spawn limit will be checked on each spawn attempt.
    I:vengeanceSpirit.spawnLimitArea=5

    # Should the Werewolf be enabled?
    B:werewolf.isEnabled=false
    B:werewolfVillager=false
}


"mod compat" {
    # Vengeance Ring, Invigorating Pendant and Effortless Ring baubles.
    B:Baubles=true

    # Bound Blood Drop item to directly drain Blood from your soul network.
    B:BloodMagic=true
    B:EnderIO=true

    # Blood Infuser and Environmental Accumulator recipes.
    B:JEI=true

    # Integration for EvilCraft recipes.
    B:MineTweaker3=true
    B:forestry=true
    B:immersiveengineering=true

    # Blood chest repair support for tinker tools.
    B:tconstruct=true
    B:thermalexpansion=true
}


potion {
    B:paling=true
}


worldgeneration {
    # The amount of ticks the server should wait before sending a soul network update. (only for servers)
    I:boundBloodDrop.maxUpdateTicks=40

    # How much ores per vein.
    I:darkOre.blocksPerVein=4

    # Generation ends of this level.
    I:darkOre.endY=66

    # Generation starts from this level.
    I:darkOre.startY=6

    # How many veins per chunk.
    I:darkOre.veinsPerChunk=7

    # The spawn chance for loot chests in dark temples, set to zero to completely disable.
    D:general.darkTempleChestChance=0.15

    # Whitelisted dimensions in which dark temples can generate.
    I:general.darkTempleDimensions <
        0
     >

    # Frequency at which dark temples should occur. 1 means every chunk, 100 means every 100th chunk.
    I:general.darkTempleFrequency=250

    # Maximum blockState height at which a dark temple can spawn.
    I:general.darkTempleMaxHeight=256

    # Maximal length of the pillars of a dark temple.
    I:general.darkTempleMaxPillarLength=20

    # Minimum block height at which a dark temple can spawn.
    I:general.darkTempleMinHeight=60

    # The minimum distance in chunks between dark temples, higher values will slow down worldgen.
    I:general.darkTempleMinimumChunkDistance=40

    # Spawn extra netherfish blocks in all biomes.
    B:general.extraSilverfish=false

    # How many veins per chunk.
    I:netherMonsterBlock.veinsPerChunk=0
}


